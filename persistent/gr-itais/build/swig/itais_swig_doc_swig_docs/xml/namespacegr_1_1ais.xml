<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegr_1_1ais" kind="namespace" language="C++">
    <compoundname>gr::ais</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegr_1_1ais_1a0e5bedddd23565c7d1ddd976fff5e0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AIS_API std::vector&lt; gr_complex &gt;</type>
        <definition>AIS_API std::vector&lt;gr_complex&gt; gr::ais::modulate_vector_bc</definition>
        <argsstring>(basic_block_sptr modulator, std::vector&lt; uint8_t &gt; data, std::vector&lt; float &gt; taps)</argsstring>
        <name>modulate_vector_bc</name>
        <param>
          <type>basic_block_sptr</type>
          <declname>modulator</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
<para>Modulate a vector of data and apply a shaping filter. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>modulator:</computeroutput> Pointer to a byte-to-complex modulator block. <computeroutput>data:</computeroutput> Vector of bytes to modulate into symbols. <computeroutput>taps:</computeroutput> Post-modulation symbol shaping filter taps.</para>
<para>This function modulates the input vector and applies a symbol shaping filter. It is intended for use with the corr_est_cc block as the symbol stream to correlate against.</para>
<para>Any differential encoding or other data coding must be performed on the input vector before this modulation operation.</para>
<para>Be aware that the format of the incoming data must match the format the modulator block is expecting. GNURadio modulator blocks are inconsistent in their data type expectations. For instance, cpmmod_bc expects unpacked, signed bytes in (-1, 1), while gmsk_mod expects packed, unsigned bytes in (0, 1). In other words, the output of gmsk_mod given the input vector [0xaa, 0x00] is equivalent to the output of cpmmod_bc given the input vector [1,255,1,255,1,255,1,255,255,255,255,255,255,255,255,255]</para>
<para>Please check the documentation or source of the modulator before using this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gnuradio/gr-itais/include/itais/modulate_vector.h" line="63" column="9" declfile="/home/gnuradio/gr-itais/include/itais/modulate_vector.h" declline="63" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/gnuradio/gr-itais/include/itais/modulate_vector.h" line="29" column="17"/>
  </compounddef>
</doxygen>
